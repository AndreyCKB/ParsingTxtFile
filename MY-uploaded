Git-sem.com 
GitHub  Login andreyckb@mail.ru
		Password Ahiles1985GitHub

Последовательнось сохранения 
		add - commit - push

	Все команды
git add - добовления изменений перед коммит
git commit - фиксирует данные в локальном репоозитарии
git push - передаёт данные на сервер
git	fetch - скачивает с сервера комиты без данных
git pull - скачивает и применяет изменения с сервера
git branch -a -показывает все доступные ветви
git status - показывает в каком статусе сейчас файлы
git diff имя файлапше - показывает разность между файлами
Reset Curent Branch to Here... - отменяет локальный коммит
git push -f origin master - комитит новый комит поверх старого
Chery Pick - позволяет добавить данные из одной ветви в другую
		

				ВАЖНО				
Открыть нужный нам каталог нажать правой кнопкой мыши и выбрать ГИТ БАШ
и мы окажимсся в консоли в нужном нам каталоге.
Проинициализировать данный каталог  git init;
Просмотреть все файлы ls -la 

Есть три базовых ветви
	HEAD - в каком камите мы сейчас находимся
	master - локал репозиторий
	Orign:master - сервер
Также могут быть ветви других разработчиков проекта или наша доплнительная 
ветвь.

Посмотреть все существующие ветки 
	git branch -a

Чтобы при fetch видить все комиты следить что сняты все филтры поиска
в IDE Log

Коммиты видят своих предков но не видят своих потомков.

				КОМАНД
				
Первичная настройка Глобальный юзер
		git config --global user.name "своё имя"
		git config --global user.email адрес почты.
Локальный юзер
		git config user.name ""
		git config user.email Почта (можно не существющую)
Данные настройки можно посмотреть в config файле в папке где мы создали инит.
в этомже файле их можно редактировать. Глобал добаляется автоматически.	
Добавление или подключение к удаленного репозитория 
		git remote add origin https://github.com/AndreyCKB/GitTraining.git	
		git push -u origin master
Отразится в config файле.
Страку можно скопировать из GitHub после создания там нового репозитария.
		git push -u origin master

Посмотреть настройки ГИТ    
		git config -l (--list) 

Посмотреть под каким именим мы работаем 
		git config user.name
		git config user.email 		

Переход в другую папку 
		cd .имя папки/
		Полный путь /с/JR/GIT/и т.д.
		Переход на папку назад cd ..
		
		
				22222
Посмотреть состояние репозитория
		git status

Добавить фай для коммита 
		git add полное имя файла
		git add . -добавить все файлы из каталога
		
Удалить файл из add (кэша)но не из папки		
		git rm --cached полное имя файла
		
Посмотреть добавленные изменения в файл сделанные после последнего add
		git diff имя файлапше 
		
Коммит файлов с сообщением
		git commit -m"Mesag"
		
Посмотреть историю коммитов.
		git log - показывает несколько последних комитов а не все.
		
Добавление игнорируемых папок и файлов 
	Через IDIA создать фаил -  .gitignor 
		Прописать в нем игнорируемые файлы и папки.
	
	В других средах разработке работает иначе.	
			
			
			
			33333
Идея в автоматическом режиме начинает показывать наши изменения 
слева возле изменёной строчке меняется цвет квадратика. можно нажать
и посмотреть какие сделаны изменения.
Также подкрашивает в дереве каталогов файлы в разные цвета.

Ползоваться GIT можно либо встроеными с IDE возможностями или
Через терминал в IDE тежи команды что и в GIT во вкладке Version Control
можно посмотреть лог и многое другое.

Если нажать слево от строки правой кнопкой мыши то мо жно в контекстном
меню выбрать Annotate там будет видно кто вносил какие изменения в код.


			4444444
Получение комиты без данных с GitHub (Или другого удалённого репозитория)
	git	fetch
	Чтобы слить вместе ветви и получить данные надо выбрать 
	Merg Changes  в меню IDE
Скомитить на удалённый репозиторий 
	git	push
Слить и сразу увидить изменения 
	Pull
	
			5555555
Создание новой ветви
	Git - Branches - new Branche "имя ветви"
	Эти данные добавяться в config file
После commit and push надо идти на GitHub и там добовлять изменения 
тамже будет видна новая ветвь.
	Для добавления данных надо нажать Comparee and poll reqest	
	Добавиться 1 во вкладку Pull reqest на GitHub
Подтвердить на сервере.
	
Отмена действий на GitHub.
Данный способ создаёт дополнительные коммиты
		Pull reqest - Clossed - выбираем коммит - Revert
		Заходим в IDE делаем Pull
		Если дважды повторить на одном и томже коммите то вернёт изначальную 
		версию до первого revert
		
		
Отмена коммита в текущей ветви сделаный через commit в IDE
Всаём на тот коммит в который хотим вернуться. Нажымаем правую 
нопку мыши
		Reset Curent Branch to Here...
		Там 2 осн варианта 
			SOFT - оставит изменения но уберёт комит.
			HARD - полный откат
Если мы уже залили на GitHub то надо ввести
Повторяем действие указаное выше Потом
		За ходим в Push и выбираем forsePush вместо кнопки Push
		Если данная опция не доступна делаем
		git push -f origin master
			
Скопировавть все изменения с любого прошлого коммита в свой
	Выбираем коммит куда надо скопировать нажимаем
	правой кнопкой по тому комиту который надо скопировать и
	выбираем Chery Pick